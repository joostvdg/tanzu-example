#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")


#@ if data.values.name == "":
#@   assert.fail('data value "name" must not be empty')
#@ end
#@ instanceName    = data.values.name
#@ labels          = { "app.kubernetes.io/name": instanceName }
#@ podHttpPort     = "8080"
#@ podMetricsPort  = "8081"

---

apiVersion: v1
kind: Service
metadata:
  name: #@ instanceName
  labels: #@ labels
spec:
  type: #@ data.values.service.type
  ports:
    - port: #@ int(data.values.service.httpPort)
      targetPort: http
      protocol: TCP
      name: http
    - port: #@ int(data.values.service.metricsPort)
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector: #@ labels

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ instanceName
  labels: #@ labels
spec:
  replicas: #@ data.values.replicaCount
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels: #@ labels
  template:
    metadata:
      labels: #@ labels
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: #@ data.values.service.metricsPort
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: #@ instanceName
          image: #@ "ghcr.io/stefanprodan/podinfo:"+data.values.imageTag
          imagePullPolicy: #@ data.values.pullPolicy
          command:
            - ./podinfo
            - #@ "--port=" + podHttpPort
            - #@ "--port-metrics=" + podMetricsPort
          env:
          - name: PODINFO_UI_MESSAGE
            value: #@ data.values.ui.message
          - name: PODINFO_UI_COLOR
            value: #@ data.values.ui.color
          ports:
            - name: http
              containerPort: #@ int(podHttpPort)
              protocol: TCP
            - name: http-metrics
              containerPort: #@ int(podMetricsPort)
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - podcli
              - check
              - http
              - #@ "localhost:" + podHttpPort + "/healthz"
            initialDelaySeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - podcli
              - check
              - http
              - #@ "localhost:" + podHttpPort + "/readyz"
            initialDelaySeconds: 1
            timeoutSeconds: 5
          volumeMounts:
          - name: data
            mountPath: /data
      volumes:
      - name: data
        emptyDir: {}
