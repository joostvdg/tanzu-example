apiVersion: tekton.dev/v1
kind: Task
metadata:
    name: git-writer
spec:
    description: |-
        A task that writes a given set of files (provided as a json base64-encoded)
        to git repository under a specified directory.
    params:
        - default: https://github.com/my-org/my-repo
          description: The git repo url
          name: url
          type: string
        - default: main
          description: The git branch to read and write
          name: base-branch
          type: string
        - description: The name of the branch to push changes to. If different from base-branch, a PR is created.
          name: commit-branch
          type: string
        - default: example@example.com
          description: User email address
          name: git-user-email
          type: string
        - default: Example
          description: User name
          name: git-user-name
          type: string
        - default: New Commit
          description: Message for the git commit
          name: git-commit-message
          type: string
        - default: ""
          description: Sub directory in which to write
          name: sub-path
          type: string
        - description: |
            Base64-encoded json map of files to write to registry, for example - eyAiUkVBRE1FLm1kIjogIiMgUmVhZG1lIiB9
          name: git-files
          type: string
        - default: "github"
          description: The kind of SCM server
          name: kind
          type: string
    results:
        - description: The url of the successfully created pull request
          name: pr-url
          type: string
        - description: The number of the successfully created pull request
          name: pr-number
          type: string
        - description: The git sha of the updated branch
          name: git-sha
          type: string
    stepTemplate:
        computeResources: {}
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
                type: RuntimeDefault
    steps:
        - computeResources: {}
          env:
            - name: HOME
              value: /home/
            - name: XDG_CONFIG_HOME
              value: /home
            - name: GIT_CONFIG_GLOBAL
              value: /home/gitconfig
          volumeMounts:
            - name: home
              mountPath: /home
          image: harbor.tap.h2o-2-19271.h2o.vmware.com/tap/tap-packages@sha256:23730b7acd3998dc7d32cb7523e5d930c9d2355f6419547a37e2d6a77fb6a14b
          name: commit-and-pr
          script: |
            #!/bin/bash

            set -euox pipefail

            cd "$(workspaces.gitops-repo.path)"
            DEST=./
            if [ -n "$(params.sub-path)" ]; then
              mkdir -p "$(params.sub-path)"
              DEST="./$(params.sub-path)/"
            fi
            cp -r "$(workspaces.content.path)/"* "$DEST"
            UPDATES="$(ls --ignore=lost+found -m $(workspaces.content.path))"

            ls -lathr /home
            cat /home/.gitconfig
            cat /home/.git-credentials

            scm pr create \
              --commit-title "Updating ${UPDATES}" \
              --path /home/.git-credentials \
              --pr-title "Updating ${UPDATES}" \
              --base-branch $(params.base-branch) \
              --commit-branch "$(params.commit-branch)" \
              --git-email "$(params.git-user-email)" \
              --git-user "$(params.git-user-name)" \
              --output-git-sha $(results.git-sha.path) \
              --output-pr-number $(results.pr-number.path) \
              --output-pr-url $(results.pr-url.path) \
              --kind "$(params.kind)" \
              --debug

            if [ ! -f "$(results.pr-url.path)" ]; then
              touch "$(results.pr-url.path)"
            fi
    workspaces:
        - description: the gitops repo to write the config update to
          name: gitops-repo
        - description: The store for the gitops PR content
          name: content
    volumes:
      - name: home
        emptyDir: {}
